name: CD with Docker

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bad0request/time-bot
  TELEGRAM_TO: -1003170352623

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      packages: write
    steps:
       # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –¥–µ–ø–ª–æ—è
      - name: Notify deploy start
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }} 
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            üöÄ –ú–µ–≥–∞ –î–µ–ø–ª–æ–π —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª –ï–ø—Ç–∞
            üì¶ Rep: ${{ github.repository }}
            üîñ Image: ${{ env.IMAGE_NAME }}
            ‚è∞ Time: ${{ github.event.workflow_run.created_at }}
            üìé Workflow: ${{ github.event.workflow_run.name }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.REGISTRY_LOGIN }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -f ./Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
      - name: Send Telegram report
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            –û–¢–ß–ï–¢ –û –ö–û–ù–¢–ï–ô–ù–ï–†–ï
      
            –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: ${{ env.CONTAINER_NAME }}
            –°—Ç–∞—Ç—É—Å: ${{ steps.container-check.outputs.status }}
            –î–µ—Ç–∞–ª–∏: ${{ steps.container-check.outputs.details }}
      
            –í—Ä–µ–º—è: ${{ fromJSON('{"date": "'$(date +"%H:%M:%S")'"}').date }}
            –¢–∏–ø: ${{ github.event_name }}
