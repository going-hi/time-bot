name: Container Manager

on:
  workflow_dispatch:
    inputs:
      action:
        description: '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
        required: true
        default: 'stop'
        type: choice
        options:
          - start
          - stop
          - restart
          - ps
      container_name:
        description: '–ò–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞'
        required: true
        default: 'time-bot'
        type: string
      pull_latest:
        description: 'Pull latest image before start'
        required: false
        type: boolean
        default: false

env:
  TELEGRAM_TO: -1003170352623
  REGISTRY: ghcr.io
  IMAGE_NAME: bad0request/time-bot  

jobs:
  manage-container:
    runs-on: ubuntu-latest
    steps:
      # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
      - name: Notify action start
        uses: appleboy/telegram-action@master
        with:  # ‚Üê –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å witch –Ω–∞ with
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          message: | 
            ${{ github.event.inputs.action == 'stop' && 'üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä' || '' }}
            ${{ github.event.inputs.action == 'start' && 'üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä' || '' }}
            ${{ github.event.inputs.action == 'restart' && 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä' || '' }}
            ${{ github.event.inputs.action == 'ps' && 'üìä –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä' || '' }}
            üì¶ Container: ${{ github.event.inputs.container_name }}
            ${{ github.event.inputs.pull_latest && 'üì• Pull latest image: YES' || '' }}
            üë§ User: ${{ github.actor }}

      - name: Execute container action via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            CONTAINER="${{ github.event.inputs.container_name }}"
            ACTION="${{ github.event.inputs.action }}"
            PULL_LATEST="${{ github.event.inputs.pull_latest }}"

            echo "üéØ –í—ã–ø–æ–ª–Ω—è—é: $ACTION –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER"
            
            case $ACTION in
              "start")
                if [ "$PULL_LATEST" = "true" ]; then
                  echo "üì• Pulling latest image..."
                  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                fi
                
                if docker ps -a | grep -q $CONTAINER; then
                  echo "üîÅ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—É—Å–∫–∞—é..."
                  docker start $CONTAINER
                else
                  echo "üöÄ –°–æ–∑–¥–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                  docker run -d \
                    --name $CONTAINER \
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                fi
                echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
                ;;
                
              "stop")
                if docker ps -a | grep -q $CONTAINER; then
                  echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                  docker stop $CONTAINER
                  echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                else
                  echo "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
                fi
                ;;
                
              "restart")
                if docker ps -a | grep -q $CONTAINER; then
                  echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                  docker restart $CONTAINER
                  echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
                else
                  echo "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
                fi
                ;;
                
              "ps")
                echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
                docker ps -a | grep $CONTAINER || echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
                ;;
            esac
            
            # –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
            echo "üìã –¢–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
            docker ps -a

      # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      - name: Notify action success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            ‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!
            üéØ Action: ${{ github.event.inputs.action }}
            üì¶ Container: ${{ github.event.inputs.container_name }}
            ${{ github.event.inputs.pull_latest && 'üì• Latest image pulled' || '' }}
            üë§ User: ${{ github.actor }}

      # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      - name: Notify action failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è
            üéØ Action: ${{ github.event.inputs.action }}
            üì¶ Container: ${{ github.event.inputs.container_name }}
            ‚ö†Ô∏è Check: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}