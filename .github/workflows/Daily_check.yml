name: Container Health Check

on:
  workflow_dispatch:

env:
  TELEGRAM_TO: -1003170352623
  CONTAINER_NAME: "bot-ebal-nahui"

jobs:
  check-container:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      - name: Check container status on remote server
        id: check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: false
          script: |
            CONTAINER="${{ env.CONTAINER_NAME }}"
            REPORT="/tmp/container_status.txt"
            RESULT_FILE="/tmp/result.txt"

            echo "üîç Checking container: $CONTAINER" > "$REPORT"

            if ! docker inspect "$CONTAINER" >/dev/null 2>&1; then
              echo "‚ùå Container not found" >> "$REPORT"
              RESULT="not_found|‚ùå Container $CONTAINER does not exist"
            else
              STATUS=$(docker inspect --format='{{.State.Status}}' "$CONTAINER")
              echo "Status: $STATUS" >> "$REPORT"
              echo "Details:" >> "$REPORT"
              docker inspect "$CONTAINER" | head -n 30 >> "$REPORT"

              if [ "$STATUS" = "running" ]; then
                docker logs --tail 20 "$CONTAINER" >> "$REPORT" 2>&1
                RESULT="running|üü¢ Container is running"
              else
                RESULT="stopped|üî¥ Container is stopped"
              fi
            fi

            echo "$RESULT" > "$RESULT_FILE"
            cat "$RESULT_FILE"

      # 2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ result.txt —Å —Å–µ—Ä–≤–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é
      - name: Get result from server
        id: get_result
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PRIVATE_KEY}}
          port: 22
          script: cat /tmp/result.txt

      # 3Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏ –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
      - name: Save result to artifact
        run: echo "${{ steps.get_result.outputs.output }}" > result.txt

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: container-status
          path: result.txt

  notify:
    runs-on: ubuntu-latest
    needs: check-container

    steps:
      # 4Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π job
      - name: Download result artifact
        uses: actions/download-artifact@v4
        with:
          name: container-status

      # 5Ô∏è‚É£ –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–∞—Ä—Å–∏–º
      - name: Read and parse result
        id: parse
        run: |
          line=$(cat result.txt || echo "unknown|no result")
          status=$(echo "$line" | cut -d'|' -f1)
          details=$(echo "$line" | cut -d'|' -f2-)
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "details=$details" >> $GITHUB_OUTPUT

      # 6Ô∏è‚É£ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
      - name: Get current time (Moscow)
        id: time
        run: |
          export TZ="Europe/Moscow"
          now=$(date +"%d %B %Y, %H:%M (%Z)")
          echo "time=$now" >> $GITHUB_OUTPUT

      # 7Ô∏è‚É£ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
      - name: Notify if container is running
        if: ${{ steps.parse.outputs.status == 'running' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            ‚úÖ *–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!*
            üê≥ *–ò–º—è:* `${{ env.CONTAINER_NAME }}`
            üü¢ ${{ steps.parse.outputs.details }}
            üïí *–í—Ä–µ–º—è:* ${{ steps.time.outputs.time }}
            üìÑ [–û—Ç—á—ë—Ç –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # 8Ô∏è‚É£ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      - name: Notify if container is stopped or not found
        if: ${{ steps.parse.outputs.status != 'running' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            ‚ö†Ô∏è *–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!*
            üê≥ *–ò–º—è:* `${{ env.CONTAINER_NAME }}`
            üî¥ ${{ steps.parse.outputs.details }}
            üïí *–í—Ä–µ–º—è:* ${{ steps.time.outputs.time }}
            üìÑ [–û—Ç—á—ë—Ç –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
