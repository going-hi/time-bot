name: Daily Container Check

on:
  schedule:
    # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 17:00 UTC (20:00 –ú–°–ö)
    - cron: '0 17 * * *'
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

env:
  TELEGRAM_TO: -1003170352623
  CONTAINER_NAME: "bot-ebal-nahui"

jobs:
  container-health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check container via SSH
        id: container check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            CONTAINER="${{ env.CONTAINER_NAME }}"
            echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$CONTAINER"; then
              STATUS=$(docker ps --format "table {{.Names}}\t{{.Status}}" | grep "$CONTAINER" | awk '{print $2}')
              UPTIME=$(docker ps --format "table {{.Names}}\t{{.RunningFor}}" | grep "$CONTAINER" | awk '{print $2}')
              echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
              echo "status=running" >> $GITHUB_OUTPUT
              echo "details=Status: $STATUS, Uptime: $UPTIME" >> $GITHUB_OUTPUT
             elif docker ps -a --format "table {{.Names}}\t{{.Status}}" | grep -q "$CONTAINER"; then
              STATUS=$(docker ps -a --format "table {{.Names}}\t{{.Status}}" | grep "$CONTAINER" | awk '{print $2}')
              echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
              echo "status=stopped" >> $GITHUB_OUTPUT
              echo "details=Status: $STATUS" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
              echo "status=not_found" >> $GITHUB_OUTPUT
              echo "details=–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" >> $GITHUB_OUTPUT
            fi
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
            echo "---"
            echo "üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            docker system df
            echo ""
            echo "üñ•Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
            docker stats --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}" | head -5

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram
      - name: Send Telegram report
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_TO }}
          token: ${{ secrets.BOT_TOKEN }}
          message: |
            ${{ 
              steps.container-check.outputs.status == 'running' && '‚úÖ –î–ù–ï–í–ù–û–ô –û–¢–ß–ï–¢' :
              steps.container-check.outputs.status == 'stopped' && '‚ùå –î–ù–ï–í–ù–û–ô –û–¢–ß–ï–¢' :
              '‚ö†Ô∏è –î–ù–ï–í–ù–û–ô –û–¢–ß–ï–¢'
            }}

            üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${{ env.CONTAINER_NAME }}
            üöÄ –°—Ç–∞—Ç—É—Å: ${{ steps.container-check.outputs.status == 'running' && '–ó–ê–ü–£–©–ï–ù' : steps.container-check.outputs.status == 'stopped' && '–û–°–¢–ê–ù–û–í–õ–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù' }}
            üìù –î–µ—Ç–∞–ª–∏: ${{ steps.container-check.outputs.details }}
            
            üïí –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${{ fromJSON('{"date": "'$(date -Iseconds)'"}').date }}
            üîß –ó–∞–ø—É—â–µ–Ω–æ: ${{ github.event_name == 'schedule' && '–ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é' : '–≤—Ä—É—á–Ω—É—é' }}
            
            ${{ steps.container-check.outputs.status != 'running' && 'üö® –¢–†–ï–ë–£–ï–¢–°–Ø –í–ú–ï–®–ê–¢–ï–õ–¨–°–¢–í–û!' : 'üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!' }}